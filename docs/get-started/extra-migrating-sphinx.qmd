---
title: Migrating from Sphinx
jupyter:
  kernelspec:
    display_name: Python 3 (ipykernel)
    language: python
    name: python3
---

Oftentimes, developers want to migrate from Sphinx to quartodoc without making lots of changes to existing docstrings.

Suppose you have rst codeblocks in your docstring that you'd like to render:

```python
class MyClass:
    """This is a great class

    Examples
    ========

    ..code:: python

        example_code = "here"

    See Also
    ========

    :func:`float`

    """
```


## Changing rst to markdown

A quick way to migrate it to quartodoc, would be to change the `.. code:: python` piece to markdown:

```python
class MyClass:
    """This is a great class

    Examples
    ========

    ```python
    example_code = "here"
    ```

    See Also
    ========

    [](:func:`float`)

    """
```

Note two important changes in the docstring above:

1. The example code now uses a markdown code block (starting with ```` ``` ````).
   You can also write the code in [docstring syntax or quarto blocks](./docstring-examples.qmd#examples-using-code-blocks).
2. The See Also section is now formatted as markdown for the [interlinks filter](./interlinks.qmd).

## Custom rendering of rst directives

While changing all the restructured text in your docstrings to markdown gets the job done,
it is often easier to use some code to make the changes first, and then edit the docstrings
later.

In order to convert your restructured text to markdown, you can define a custom renderer.

For example:

```python
from quartodoc import MdRenderer

from plum import dispatch
from griffe.docstrings import dataclasses as ds

class MyRenderer(MdRenderer):
    def 
```
